{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tbody","addEventListener","e","rowsForSort","querySelectorAll","target","tagName","place","closest","rows","length","index","children","indexOf","sort","a","b","first","innerText","second","isNaN","parseFloat","slice","localeCompare","forEach","row","append"],"mappings":";AAAA,aAKA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAHA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAQF,SAASC,cAAc,SAErCF,EAAMI,iBAAiB,QAAS,SAACC,GACzBC,IAAAA,EAAkBH,EAAAA,EAAMI,iBAAiB,OAE3CF,GAAqB,OAArBA,EAAEG,OAAOC,QAAkB,CACvBC,IAAAA,EAAQL,EAAEG,OAAOG,QAAQ,SAAW,EAAIX,EAAMY,KAAKC,OAAS,EAC5DC,EAAQ,EAAId,EAAMY,KAAKF,GAAOK,UAAUC,QAAQX,EAAEG,QAExDF,EAAYW,KAAK,SAACC,EAAGC,GACbC,IAAAA,EAAQF,EAAEH,SAASD,GAAOO,UAC1BC,EAASH,EAAEJ,SAASD,GAAOO,UAE7BE,OAAAA,MAAMC,WAAWJ,EAAMK,MAAM,KACxBL,EAAMM,cAAcJ,GAED,MAAtBF,EAAMK,MAAM,EAAG,GACVD,WAAWJ,EAAMK,MAAM,IAAMD,WAAWF,EAAOG,MAAM,IAGvDD,WAAWJ,GAASI,WAAWF,KAK5ChB,EAAYqB,QAAQ,SAAAC,GAAOzB,OAAAA,EAAM0B,OAAOD","file":"main.771396ab.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tbody = document.querySelector('tbody');\n\ntable.addEventListener('click', (e) => {\n  const rowsForSort = [...tbody.querySelectorAll('tr')];\n\n  if (e.target.tagName === 'TH') {\n    const place = e.target.closest('thead') ? 0 : table.rows.length - 1;\n    const index = [...table.rows[place].children].indexOf(e.target);\n\n    rowsForSort.sort((a, b) => {\n      const first = a.children[index].innerText;\n      const second = b.children[index].innerText;\n\n      if (isNaN(parseFloat(first.slice(1)))) {\n        return first.localeCompare(second);\n      } else {\n        if (first.slice(0, 1) === '$') {\n          return parseFloat(first.slice(1)) - parseFloat(second.slice(1));\n        }\n\n        return parseFloat(first) - parseFloat(second);\n      }\n    });\n  }\n\n  rowsForSort.forEach(row => tbody.append(row));\n});\n"]}